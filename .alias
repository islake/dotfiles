alias ls='exa'
alias ll="exa -alh --color=always"
alias tree="exa --tree"
alias cat="batcat"
alias t='python ~/programs/t/t.py --task-dir ~/programs/t/tasks --list tasks'
alias venvup='source ./venv/bin/activate'

# set up dotfiles commands
DOTFILES="$HOME/.dotfiles"

dtf () {
  git --git-dir="$DOTFILES" --work-tree="$HOME" "$@"
}

dtfnew () {
  git clone --bare $1 $DOTFILES
  dtf config --local status.showUntrackedFiles no
  dtf switch -c base

  echo "Please add and commit additional files"
  echo "using 'dtf add' and 'dtf commit', then run"
  echo "dtf push -u origin base"
}

dtfrestore () {
  git clone -b base --bare $1 $DOTFILES
  dtf config --local status.showUntrackedFiles no
  dtf checkout || echo -e 'Deal with conflicting files, then run (possibly with -f flag if you are OK with overwriting)\ndtf checkout'
}

# misc
alias fflo='nohup ~/programs/firefox-lopower/firefox &'
alias unidir='cd ~/Documents/shared/uni/yr2'
alias dropdown='tmuxinator start dropdown'
alias wttr="curl \"wttr.in/bristol?0npQ\""
alias mounthome="sudo mount -t cifs -o user=dietpi //cosypi/ULTIMA /mnt/ULTIMA"
alias mountubuntu="sudo mount /dev/nvme0n1p7 /mnt/ubuntu"

ttv() {
  eval "streamlink twitch.tv/$1 ${2:-480p} &"
}

# reminder
remind() {
  eval "echo \"fflo\""
  eval "echo \"stmp     music\""
  eval "echo \"unidir\""
  eval "echo \"dropdown\""
  eval "echo \"mc\""
  eval "echo \"wttr\""
  eval "echo \"t [-f id]|[task description]\""
  eval "echo \"mounthome\""
  eval "echo \"bluetoothctl\""
  eval "echo \"nmcli [con up NAME]\""
  eval "echo \"ls -lsnew\""
  eval "echo \"zathura\""
  eval "echo \"$VM_IP - dev:uweos\""
  eval "echo \"shiori   bookmarks\""
  eval "echo \"ncdu     diskspace\""
  eval "echo \"switch_ext / switch_int  change monitor\""
}

# critical system function
capy() {
  echo ""
  echo "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⣄⢘⣒⣀⣀⣀⣀⠀⠀⠀"
  echo "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣽⣿⣛⠛⢛⣿⣿⡿⠟⠂⠀"
  echo "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⣀⡀⠀⣤⣾⣿⣿⣿⣿⣿⣿⣿⣷⣿⡆⠀"
  echo "⠀⠀⠀⠀⠀⣀⣤⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠁⠀"
  echo "⠀⠀⢀⣴⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀"
  echo "⠀⣠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀"
  echo "⠀⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠜⠀⠀⠀⠀⠀⠀⠀"
  echo "⠀⠀⢿⣿⣿⣿⣿⠿⠿⣿⣿⡿⢿⣿⣿⠈⣿⣿⣿⡏⣠⡴⠀⠀⠀⠀⠀⠀⠀"
  echo "⠀⣠⣿⣿⣿⡿⢁⣴⣶⣄⠀⠀⠉⠉⠉⠀⢻⣿⡿⢰⣿⡇⠀⠀⠀⠀⠀⠀⠀"
  echo "⠀⢿⣿⠟⠋⠀⠈⠛⣿⣿⠀⠀⠀⠀⠀⠀⠸⣿⡇⢸⣿⡇⠀⠀⠀⠀⠀⠀⠀"
  echo "⠀⢸⣿⠀⠀⠀⠀⠀⠘⠿⠆⠀⠀⠀⠀⠀⠀⣿⡇⠀⠿⠇⠀⠀⠀⠀⠀⠀⠀"
  echo ""
}
